{"version":3,"sources":["webpack://tabs-timer-food/./js/modules/calc.js","webpack://tabs-timer-food/./js/modules/cards.js","webpack://tabs-timer-food/./js/modules/forms.js","webpack://tabs-timer-food/./js/modules/modal.js","webpack://tabs-timer-food/./js/modules/slider.js","webpack://tabs-timer-food/./js/modules/tabs.js","webpack://tabs-timer-food/./js/modules/timer.js","webpack://tabs-timer-food/./js/script.js","webpack://tabs-timer-food/./js/services/services.js","webpack://tabs-timer-food/webpack/bootstrap","webpack://tabs-timer-food/webpack/runtime/define property getters","webpack://tabs-timer-food/webpack/runtime/hasOwnProperty shorthand","webpack://tabs-timer-food/webpack/runtime/make namespace object","webpack://tabs-timer-food/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wEAAwE;AACxE,yFAAyF;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G;AAC7G,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,sDAAsD;AACtD,6DAA6D;AAC7D,oFAAoF;AACpF,aAAa;AACb,kDAAkD;AAClD;AACA;AACA,yEAAyE;AACzE,gDAAgD;AAChD;AACA,SAAS;AACT;;AAEA,2EAA2E;AAC3E,4FAA4F;;AAE5F;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,aAAa;AACb;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,iEAAe,IAAI,E;;;;;;;;;;;;;;;AC5G8B;AACjD;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,+BAA+B;;AAE/B;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,SAAS,OAAO,SAAS;AACpD,kDAAkD,aAAa;AAC/D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,+DAAW;AACf;AACA,mBAAmB,iCAAiC;AACpD;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,sBAAsB,iCAAiC;AACvD;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;ACzD0B;AACA;;AAE9C;AACA,0DAA0D;;AAE1D,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA,aAAa;AACb,kEAAkE;;AAElE;AACA;AACA;AACA;;AAEA;AACA,YAAY,4DAAQ;AACpB;AACA,sCAAsC;AACtC,sDAAsD;AACtD,2CAA2C;AAC3C,iBAAiB;AACjB;AACA,sDAAsD;AACtD,iBAAiB;AACjB;AACA,iCAAiC;AACjC,iBAAiB;AACjB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS,0BAA0B;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;AC9EpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;ACnDrB,iBAAiB,mFAAmF;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D;;AAE7D;AACA,qBAAqB;AACrB,mBAAmB;;AAEnB;AACA,wDAAwD;AACxD;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,SAAS;AAC3C,KAAK;AACL,+BAA+B,cAAc;AAC7C;;AAEA;AACA;AACA,kCAAkC;AAClC,KAAK;;;AAGL;AACA,uCAAuC;AACvC;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC,iDAAiD;AACjD;;AAEA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,SAAS;AACT;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oEAAoE;;AAEpE,+BAA+B;AAC/B,0DAA0D;AAC1D;AACA;AACA;;AAEA,SAAS;AACT,KAAK;;AAEL;AACA,iDAAiD,OAAO;AACxD;;AAEA;AACA;AACA,sCAAsC,SAAS;AAC/C,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iEAAe,MAAM,E;;;;;;;;;;;;;;AC7IrB;AACA,yDAAyD;AACzD,sEAAsE;AACtE,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,iEAAe,IAAI,E;;;;;;;;;;;;;;ACrCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;ACpDa;AACE;AACA;AACA;AACA;AACE;AACJ;AACQ;;AAE1C;AACA;AACA,4CAA4C,yDAAS;AACrD,IAAI,sDAAI;AACR,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,wDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,sDAAI;AACR,CAAC,E;;;;;;;;;;;;;;;AC5BD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;AACA;AACA;;;;;AAK+B;;;;;;;;UCtB/B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["function calc() {\r\n    let sex, height, weight, age, ratio;\r\n\r\n    // Результат span\r\n    const result = document.querySelector('.calculating__result span');\r\n    // Если в локальном хранилищи есть, то\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        // Если нет, то добавляем дэфолт\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    // Обраобтка локального хранилища\r\n    function initLocalSettings(selector, activeClass) {\r\n        // Таким образом можем обрабатывать разные классы\r\n        const elements = document.querySelectorAll(selector);\r\n        // Удаляем активный класс везде\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            // Проверяем, если значение id равно значению в локалке \"sex\"\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                // Добавляем класс активности на него\r\n                elem.classList.add(activeClass);\r\n            }\r\n            // Проверяем, если значение атрибута data-ratio равно значению в локалке \"ratio\"\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active'); // вызываем для первого блока\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active'); // для второго\r\n\r\n    // Функция, которая обрабатывает данные\r\n    function calcTotal() {\r\n        // Если значений нет, то ___\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '___';\r\n            return;\r\n        }\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio); // round Округляет\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    calcTotal();\r\n\r\n    // Вешаем обработичики на пол и активность\r\n    // Обрабатываем ДВА БЛОКА\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector); // Получаем кнопки div\r\n        // Записываем коэф активности и пол\r\n        elements.forEach(elem => elem.addEventListener('click', e => {\r\n            if (e.target.getAttribute('data-ratio')) { // Если клик по элементу с атрибутом, то..\r\n                ratio = +e.target.getAttribute('data-ratio'); // Присваеваем значение атрибута(html)\r\n                localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')); // Вносим в локалку\r\n            } else {\r\n                sex = e.target.getAttribute('id'); // Также\r\n                localStorage.setItem('sex', e.target.getAttribute('id'));\r\n            }\r\n            elements.forEach(item => item.classList.remove(activeClass)); // Удаляем класс активности со всех элем\r\n            e.target.classList.add(activeClass); // Добавляем активность на то, что кликнули\r\n            calcTotal();\r\n        }))\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active'); // вызываем для первого блока\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active'); // для второго\r\n\r\n    // Получаем значения элементов из инпута\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/g)) { // Если в инпуте есть буквы (не номера)\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n                switch (input.getAttribute('id')) { // Если айди = case\r\n                    case 'height':\r\n                        height = +input.value;\r\n                        break;\r\n                    case 'weight':\r\n                        weight = +input.value;\r\n                        break;\r\n                    case 'age':\r\n                        age = +input.value;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            calcTotal();\r\n        })\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\nexport default calc;","import {getResource} from '../services/services';\r\nfunction cards() {\r\n    class MenuItem {\r\n        constructor(src, alt, heading, descr, price, parent, ...classes) { // classes вместит в себя n-классов\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.heading = heading;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parent); // Получаем родительский контейнер\r\n            this.transfer = 27;\r\n            this.changeToUAH(); // Делаем вычисление\r\n\r\n        }\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer; // new Price возвращается в конструктор\r\n        }\r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length === 0) { // Если длинна массива с классами 0, то..\r\n                this.classes = 'menu__item';\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n            // element = <div class=\"...\"></div>\r\n            element.innerHTML = ` \r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.heading}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n                `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    // CLEAR FETCH\r\n    getResource('http://localhost:3000/menu').then(data => {\r\n        data.forEach(obj => {\r\n            const {img, altimg, title, descr, price} = obj;\r\n            new MenuItem(img, altimg, title, descr, price, '.menu .container').render();\r\n        });\r\n    });\r\n    // // AXIOS\r\n    // axios.get('http://localhost:3000/menu').then(data => {\r\n    //     data.data.forEach(obj => {\r\n    //         const {img, altimg, title, descr, price} = obj;\r\n    //         new MenuItem(img, altimg, title, descr, price, '.menu .container').render();\r\n    //     });\r\n    // });\r\n    //\r\n}\r\nexport default cards;","import {openModal, closeModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalInterval) {\r\n    const forms = document.querySelectorAll(formSelector); // Получаем формы\r\n\r\n    const message = { // Отображаемый контент при работе сервера\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Thanks, we will call you soon',\r\n        failure: 'Something gone wrong',\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item); // Получаем каждую форму и передаем в функцию\r\n    });\r\n\r\n    // Функция передачи данных\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img'); // Контент, который мы отобразим\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n               display: block;\r\n               margin: 0 auto;\r\n           `; // Дает возможность вписать css styles (inline-format)\r\n            form.insertAdjacentElement('afterend', statusMessage); // гибкий append\r\n\r\n            // Создаем обьект\r\n            const formData = new FormData(form);\r\n            // Переобразовываем в Json\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // Fetch it\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data); // отображаем в консоль текстовый ответ\r\n                    showSuccessModal(message.success); // Отображаем успешность\r\n                    statusMessage.remove(); // Удаляем спинер\r\n                })\r\n                .catch(() => {\r\n                    showSuccessModal(message.failure); // Отображаем ошибку\r\n                })\r\n                .finally(() => {\r\n                    form.reset(); // Обнуляем форму\r\n                });\r\n        });\r\n    }\r\n\r\n    function showSuccessModal(message) {\r\n        // Скрываем основное модальное окно\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        prevModalDialog.classList.add('hide');\r\n        prevModalDialog.classList.remove('show');\r\n        openModal('.modal', modalInterval); // открываем новое окно\r\n\r\n        // Создаем новое окно\r\n        const successModal = document.createElement('div');\r\n        successModal.classList.add('modal__dialog');\r\n        successModal.innerHTML = `\r\n        <div class=\"modal__content\">\r\n            <div class=\"modal__close\" data-close>×</div>\r\n            <div class=\"modal__title\">${message}</div>\r\n        </div>\r\n        `;\r\n\r\n        // Добавляем новое окно\r\n        document.querySelector('.modal').append(successModal);\r\n        // После отрабтки удаляем окно и возобновляем работу старого\r\n        setTimeout(() => {\r\n            successModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n}\r\nexport default forms;","// Показываем модальное окно\r\nfunction openModal(modalSelector, modalInterval) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.remove('hide');\r\n    modal.classList.add('show');\r\n    document.body.style.overflow = 'hidden';\r\n    if (modalInterval) {\r\n        clearInterval(modalInterval); // Очищаем модальное окно если пользователь открыл сам\r\n    }\r\n}\r\n\r\n// Прячем модальное окно\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.remove('show');\r\n    modal.classList.add('hide');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalInterval) {\r\n    const modal = document.querySelector(modalSelector),\r\n        modalBtn = document.querySelectorAll(triggerSelector);\r\n\r\n    // Обработчик кнопок\r\n    modalBtn.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalInterval))\r\n    });\r\n    // Нажатие на крестик модального\r\n    // Закрытие модального по темной области\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') === '') { //data-close - наш крестик\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n    // Закрытие модального по кнопке\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n    // Показываем модальное окно в конце страницы\r\n    function endPageModal() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document // pageYofset - тек полож на стp по Y\r\n            .documentElement.scrollHeight) { // clientHeight = размер высоты окна и scrollHeight - высота всей страницы\r\n            openModal(modalSelector, modalInterval);\r\n            window.removeEventListener('scroll', endPageModal);\r\n        }\r\n    }\r\n    // Обработчик появления модального при скролле\r\n    window.addEventListener('scroll', endPageModal);\r\n}\r\nexport default modal;\r\nexport {openModal, closeModal};","function slider({container, slide, nextArrow, prevArrow, totalCount, currentCounter, wrapper, field}) {\r\n    const slider = document.querySelector(container),\r\n        sliderWrapper = slider.querySelector(wrapper),\r\n        sliderInner = slider.querySelector(field),\r\n        slides = slider.querySelectorAll(slide),\r\n        prev = slider.querySelector(prevArrow),\r\n        next = slider.querySelector(nextArrow),\r\n        total = document.querySelector(totalCount),\r\n        current = document.querySelector(currentCounter),\r\n\r\n        width = window.getComputedStyle(sliderWrapper).width; // Ширина видимого блока\r\n\r\n    // index and offset(Отступ)\r\n    let slideIdx = 1; // начальный индекс\r\n    let offset = 0; // начальная щиринп\r\n\r\n    // Добавляем стили к оболочке слайдов\r\n    sliderInner.style.width = 100 * slides.length + '%'; // Ширина равна 100*кол-во слайдов + %\r\n    sliderInner.style.display = 'flex';\r\n    sliderInner.style.transition = '0.5s all';\r\n    sliderWrapper.style.overflow = 'hidden'; // Скрываем всё, что не вписывается в ширину окна\r\n\r\n    // Прибавляем нули в счётчик в дефолтном состоянии\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIdx}`;\r\n    } else {\r\n        total.textContent = `${slides.length}`;\r\n    }\r\n\r\n    // Перебираем слайды и назначаем всем одинаковую ширину\r\n    slides.forEach((slide) => {\r\n        slide.style.width = width; // Ширина computedStyle = sliderWrapper\r\n    });\r\n\r\n\r\n    // === Точки слайдера\r\n    slider.style.position = 'relative'; // Делаем весь слайдер relative\r\n    // Создаем обертку точек\r\n    const indicators = document.createElement('ol');\r\n\r\n    const dotsArr = []; // Массив, куда будут помещаться точки\r\n\r\n    // Добавляем css класс\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    // Цикл, который создаст нужное кол-во точек\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');  // Точка\r\n        dot.classList.add('dot');\r\n\r\n        // Атрибут, который будет говорить о том, чтобы конкретная точка шла к конкретному слайду\r\n        dot.setAttribute('data-slide-to', i + 1); // data-slide-to=\"i\"\r\n\r\n        // Добавляем визуальную активность для первого слайда\r\n        if (i === 0) {\r\n            dot.style.opacity = '1';\r\n        }\r\n        indicators.append(dot); // Добавляем точки внутрь обертки\r\n        dotsArr.push(dot); // Пушим массив нашими точками\r\n    }\r\n\r\n    // Next button\r\n    next.addEventListener('click', () => {\r\n        // Если отступ == ширине слайда(обрезаем px через slice) * на кол-во слайдов, то отступ в позицию 0\r\n        if (offset === replaceString(width) * (slides.length - 1)) { // Number.parseInt(width)\r\n            offset = 0;\r\n        } else {\r\n            // При нажатии вперед к Offset прибавляется ширина каждого слайда\r\n            offset += replaceString(width); // Удаляем пискели через слайд\r\n        }\r\n        // Таким образом происходит перемещение\r\n        translateXStyle(sliderInner);\r\n        // Если индекс равен количеству слайдов, то есть\r\n        if (slideIdx === slides.length) {\r\n            slideIdx = 1;\r\n        } else {\r\n            slideIdx++;\r\n        }\r\n        getZero(current);\r\n        // Каждому элементу в массиве даем прозрачность .5\r\n        dotOpacity();\r\n    });\r\n\r\n    // Prev button\r\n    prev.addEventListener('click', () => {\r\n        // Когда отступ в начальном положении, то при нажатии назад\r\n        if (offset === 0) { //width = 0\r\n            offset = replaceString(width) * (slides.length - 1);\r\n        } else {\r\n            // При нажатии назад\r\n            offset -= replaceString(width);\r\n        }\r\n        translateXStyle(sliderInner);\r\n\r\n        if (slideIdx === 1) {\r\n            slideIdx = slides.length;\r\n        } else {\r\n            slideIdx--;\r\n        }\r\n        getZero(current);\r\n        dotOpacity();\r\n    });\r\n    // Перебор массива\r\n    dotsArr.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = +e.target.getAttribute('data-slide-to'); // Получаем значение атрибута точки\r\n\r\n            slideIdx = slideTo; // Присваеваем индексу значение атрибута точки\r\n            offset = replaceString(width) * (slideTo - 1); // Выставляем позицию слайдов\r\n            translateXStyle(sliderInner);\r\n            getZero(current);\r\n            dotOpacity();\r\n\r\n        })\r\n    })\r\n\r\n    function translateXStyle(element) {\r\n        element.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function getZero(element) {\r\n        if (slides.length < 10) {\r\n            element.textContent = `0${slideIdx}`;\r\n        } else {\r\n            element.textContent = slideIdx;\r\n        }\r\n    }\r\n\r\n    function dotOpacity() {\r\n        dotsArr.forEach(dot => dot.style.opacity = '.5');\r\n        dotsArr[slideIdx - 1].style.opacity = 1;\r\n    }\r\n\r\n    function replaceString(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    const tabs = document.querySelectorAll(tabsSelector); // Ссылка\r\n    const tabContent = document.querySelectorAll(tabsContentSelector); // Контент\r\n    const tabParent = document.querySelector(tabsParentSelector); // Родитель ссылки\r\n\r\n    // Прячем контент\r\n    const hideContent = () => {\r\n        tabContent.forEach((i) => {\r\n            i.classList.remove('show');\r\n            i.classList.add('hide');\r\n        });\r\n\r\n        tabs.forEach(i => i.classList.remove(activeClass));\r\n    };\r\n    // Показываем контент\r\n    const showContent = (id = 0) => {\r\n        tabContent[id].classList.remove('hide');\r\n        tabContent[id].classList.add('show');\r\n        tabs[id].classList.add(activeClass);\r\n    };\r\n\r\n    hideContent();\r\n    showContent();\r\n\r\n    // Обрабатываем клик на ссылку\r\n    tabParent.addEventListener('click', (elem) => {\r\n        const target = elem.target;\r\n        if(target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, id) => {\r\n                if (target === item) { // Проверяем на совпадение при нажатии\r\n                    hideContent();\r\n                    showContent(id);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\nexport default tabs;","function timer(id, deadline) {\r\n    // Получаем переменные времени\r\n    function getTime(deadline) {\r\n        const time = Math.floor(new Date(deadline)) - Math.floor(new Date()),\r\n            days = Math.floor(time / (1000 * 60 * 60 * 24)),\r\n            hours = Math.floor(time / (1000 * 60 * 60) % 24),\r\n            minutes = Math.floor(time / (1000 * 60) % 60),\r\n            seconds = Math.floor(time / 1000 % 60);\r\n\r\n        return {\r\n            time,\r\n            days,\r\n            hours,\r\n            minutes,\r\n            seconds,\r\n        };\r\n    }\r\n    // Часы\r\n    function setClock(clock, deadline) {\r\n        const timer = document.querySelector(clock),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            interval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        // Добавляем ноль перед значением\r\n        function getZero(num) {\r\n            if (num < 10) {\r\n                return `0${num}`;\r\n            } else {\r\n                return num;\r\n            }\r\n        }\r\n        // Обновляем функцию\r\n        function updateClock() {\r\n            const t = getTime(deadline);\r\n            if (t.time <= 0) {\r\n                clearInterval(interval);\r\n            } else {\r\n                days.innerHTML = getZero(t.days);\r\n                hours.innerHTML = getZero(t.hours);\r\n                minutes.innerHTML = getZero(t.minutes);\r\n                seconds.innerHTML = getZero(t.seconds);\r\n            }\r\n        }\r\n    }\r\n    setClock(id, deadline);\r\n};\r\n\r\nexport default timer;\r\n","import tabs from './modules/tabs';\r\nimport timer from './modules/timer';\r\nimport modal from './modules/modal';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport calc from './modules/calc';\r\nimport {openModal} from './modules/modal';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Таймаут появления модалки () => openModal(modalSelector, modalInterval)\r\n    const modalInterval = setTimeout( () => openModal('.modal', modalInterval), 50000);\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    timer('.timer', '2020-12-21');\r\n    modal('[data-modal]', '.modal', modalInterval);\r\n    cards();\r\n    forms('form', modalInterval);\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCount: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n    calc();\r\n});","const postData = async (url, data) => {\r\n    const res = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: data\r\n    });\r\n    return await res.json();\r\n};\r\n\r\nconst getResource = async (url) => {\r\n    const res = await fetch(url);\r\n    if (!res.ok) {\r\n        throw new Error(`Coudn't fetch ${url}, status: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n};\r\n\r\n\r\n\r\n\r\nexport {postData, getResource};\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/script.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}